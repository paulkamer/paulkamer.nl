{"version":3,"sources":["containers/Home.tsx","components/Submenu.tsx","components/HeaderBar.tsx","components/FooterBar.tsx","components/Breadcrumbtrail.tsx","containers/projects/ProjectsIndexPage.tsx","components/Screenshots.tsx","containers/projects/ProjectWorldfootballPage.tsx","containers/projects/ProjectTrialmonitorPage.tsx","containers/App.tsx","serviceWorker.js","index.tsx"],"names":["Home","jobs","company","tenure","logo_url","website_url","text","id","className","href","target","rel","discipline","skills","map","index","key","skill","si","job","src","alt","to","Submenu","HeaderBar","FooterBar","Breadcrumbtrail","this","props","trail","crumb","label","Component","ProjectsIndexPage","Screenshots","screenshots","screenshot","url","title","wfScreenshots","ProjectWorldfootballPage","ProjectTrialmonitorPage","App","exact","path","component","ClinicaltrialsmonitorPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb3c4b08.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Home.scss';\n\nconst Home = () => {\n  const skills = [\n    {\n      discipline: 'Back-end',\n      skills: ['Ruby','Node.js','PHP','RabbitMQ','Resque']\n    },\n    {\n      discipline: 'Databases',\n      skills: ['PostgreSQL', 'Redis','Elasticsearch', 'MySQL','Oracle']\n    },\n    {\n      discipline: 'Infrastructure',\n      skills: ['Heroku', 'Cloud (AWS)', 'Serverless', 'Docker']\n    },\n    {\n      discipline: 'Front-end',\n      skills: ['Vue.js','Nuxt.js','React', 'Riot.js'],\n    },\n    {\n      discipline: 'Misc',\n      skills: [ 'Nginx', 'Apache', 'Git','UML','CI/CD','ArchiMate']\n    }\n  ];\n\n  const jobs = [\n    {\n      company: 'start.me',\n      tenure: 'dec 2016 - current',\n      logo_url: '/images/logo-startme.png',\n      website_url: 'https://start.me',\n      text: <section>\n        <p>start.me is an online start page/bookmark manager for both individuals and organisations.</p>\n        <p>As a Senior Web Developer, and later Tech Lead, I've worked on numerous front-end, back-end and infrastructure-related projects.</p>\n      </section>\n    },\n    {\n      company: 'Global Sports Media / Perform Group',\n      tenure: 'jan 2010 - nov 2016',\n      logo_url: '/images/logo-perform.svg',\n      website_url: 'https://www.statsperform.com',\n      text: <section>\n        <p>Global Sports Media (GSM) collects and syndicates sports statistics via a REST API, FTP push service and hosted (white-label) websites and widgets.</p>\n        <p>After being fully acquired by Perform Group, I've worked as a Software Architect on, amongst other thing, a project to introduce a new sports data collection platform.</p>\n      </section>\n    },\n    {\n      company: 'Sport-Track / MyLaps',\n      tenure: 'may 2007 - dec 2009',\n      logo_url: '/images/logo-mylaps.svg',\n      website_url: 'https://www.mylaps.com',\n      text: <section>\n        <p>Sport-Track developed a GPS-based live tracking and tracing system for sporting events.</p>\n        <p>\n          As a web developer I worked on a back-end portal written in PHP, which was backed by an Oracle database.\n          Using this portal, organisers could manage their sporting events. It also served as a registration portal for participants.\n        </p>\n      </section>\n    }\n  ]\n\n  return (\n    <article>\n      <section id=\"bio\" className=\"bio\">\n        <h2>Bio</h2>\n        <p>I'm an experienced full-stack web developer, more inclined towards back-end development, from The Hague in The Netherlands.</p>\n        <p>\n          I've worked in the sports data industry for over 8 years. The last 4 years I worked as a Tech Lead\n          for <a href=\"https://start.me\" target=\"_blank\" rel=\"noopener noreferrer\">start.me</a>, an online start page/bookmark manager service.\n        </p>\n\n        <p>My main interests & experience are: Ruby, Node, PHP, PostgreSQL, JS (vanilla, Vue & React), cloud & serverless.</p>\n\n\n        <p>\n          Download my CV: <a href=\"/docs/cv.pdf\">Dutch</a> | <a href=\"/docs/cv_en.pdf\">English</a>\n        </p>\n      </section>\n\n      <section id=\"skills\" className=\"skills\">\n        <h2>Skills</h2>\n        <ul className=\"skills__skillslist\">\n          {\n            skills.map((discipline, index) => {\n              return <li key={`sk_${index}`} className=\"skillsgroup\">\n                <span className=\"skillsgroup__discipline\">{discipline.discipline}:</span>\n                <ul className=\"skillsgroup__skillslist\">\n                  {\n                    discipline.skills.map((skill, si) =>\n                      <li key={`${index}_${si}`} className=\"skillsgroup__skill\">{skill}</li>\n                    )\n                  }\n                </ul>\n              </li>\n            })\n          }\n        </ul>\n      </section>\n\n      <section id=\"jobs\" className=\"jobs\">\n        <h2>Jobs</h2>\n        {\n          jobs.map((job, index) => {\n            return <article key={`job_${index}`} className=\"job\">\n              <h3>{job.company}<span className=\"job__tenure\"> - {job.tenure}</span></h3>\n              <section className=\"job__job-details\">\n                <div className=\"job__company-logo\">\n                  <a href={job.website_url} target=\"_blank\" rel=\"noopener noreferrer\"><img src={job.logo_url} alt={`${job.company} logo`} /></a>\n                </div>\n                {job.text}\n              </section>\n            </article>\n          })\n        }\n      </section>\n\n      <section className=\"projects\">\n        <h2 >Projects</h2>\n        For an impression of personal projects I've worked on, see the <Link to=\"/projects/\">Projects page</Link>.\n      </section>\n    </article>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Submenu.scss';\n\nconst Submenu = () => {\n  return (\n    <div className=\"submenu\">\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/projects/\">Projects</Link></li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Submenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Submenu from './Submenu';\n\nimport './HeaderBar.scss';\n\nconst HeaderBar = () => {\n  return (\n    <header className=\"HeaderBar\">\n      <div className=\"HeaderBar__container\">\n        <div className=\"HeaderBar__name\">\n          <Link to=\"/\">\n              <img className=\"HeaderBar avatar\" alt=\"avatar\" src=\"/avatar192.jpg\" />\n            </Link>\n            <Link to=\"/\">\n              <h1>Paul Kamer</h1>\n            </Link>\n        </div>\n\n        <div className=\"HeaderBar__submenu\">\n          <Submenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default HeaderBar;\n","import React from 'react';\n\nimport './FooterBar.scss';\n\nconst FooterBar = () => {\n  return (\n    <footer className=\"footerbar\">\n      <a href=\"https://github.com/paulkamer/\" className=\"footerbar__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"https://unpkg.com/simple-icons@latest/icons/github.svg\" alt=\"Github\" />\n      </a>\n      <a href=\"https://www.linkedin.com/in/paulkamer/\" className=\"footerbar__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"https://unpkg.com/simple-icons@latest/icons/linkedin.svg\" alt=\"LinkedIn\" />\n      </a>\n      <a href=\"mailto:paulkamer@gmail.com\" className=\"footerbar__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"/images/mail.svg\" alt=\"email\" />\n      </a> { '\\u2013' } last updated February 2020\n    </footer>\n  );\n}\n\nexport default FooterBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Breadcrumbtrail.scss';\n\ntype BreadCrumb = {\n  label: string;\n  to?: string;\n}\n\nexport interface BreadcrumbtrailProps { trail: BreadCrumb[]; }\n\nexport class Breadcrumbtrail extends Component<BreadcrumbtrailProps> {\n  render() {\n    return (\n      <nav className=\"breadcrumbtrail\">\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          {\n            this.props.trail.map((crumb, index) =>\n              <li key={`breadcrumb_${index}`}>{crumb.to ? <Link to={crumb.to}>{crumb.label}</Link> : crumb.label}</li>\n            )\n          }\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Breadcrumbtrail } from '../../components/Breadcrumbtrail'\n\nconst ProjectsIndexPage = () => {\n  return (\n    <section>\n      <Breadcrumbtrail trail={[{ label: 'Projects' }]} />\n      <h1>Projects</h1>\n\n      <article>\n        <h2>ClinicalTrials.gov monitor</h2>\n\n        <p>\n          A service to receive notifications about updated clinical trials on ClinicalTrials.gov.<br/>\n          For a full description, click <Link to=\"/projects/trialmonitor/\">here</Link>.\n        </p>\n      </article>\n\n      <article>\n        <h2>Worldfootball</h2>\n\n        <p>\n          A football results and statistics website, written in React and Ruby. Read <Link to=\"/projects/worldfootball/\">more</Link>.\n        </p>\n      </article>\n\n      <article>\n        <h2>Compound interest calculator</h2>\n\n        <p>\n          A mini project to play around with Riot.js. <a href=\"https://github.com/paulkamer/compound-interest-calculator\" target=\"_blank\" rel=\"noopener noreferrer\">source</a> | <a href=\"https://codesandbox.io/embed/compound-interest-calculator-4d5kf?fontsize=14&view=preview\" target=\"_blank\" rel=\"noopener noreferrer\">demo</a>.\n        </p>\n      </article>\n\n      <article>\n        <h2>Air-Attack</h2>\n\n        <p>\n          Air-Attack was military aviation-related hobby website that I ran for several years.*<br/>\n        </p>\n\n        <h3>Technology</h3>\n        <ul>\n          <li>Front-end: PHP, Symfony 2, Apache</li>\n          <li>Back-end: Python, Django</li>\n          <li>Infrastructure: Amazon EC2</li>\n          <li>DB & Search: MySQL, ElasticSearch</li>\n        </ul>\n      </article>\n\n      <footer className=\"footnotes\">*The domain has since been taken over by spammers it seems.</footer>\n    </section>\n  );\n}\n\nexport default ProjectsIndexPage;\n","import React, { Component } from 'react';\n\nimport './Screenshots.scss';\n\ntype Screenshot = {\n  alt: string;\n  url: string;\n  title?: string;\n}\n\nexport interface ScreenshotsProps { screenshots: Screenshot[]; }\n\nexport class Screenshots extends Component<ScreenshotsProps> {\n  render() {\n    return (\n      <div className=\"screenshots\">\n        {\n          this.props.screenshots.map((screenshot, index) =>\n            <div key={`screenshot_${index}`} className=\"screenshots__screenshot\">\n              <a\n                href={screenshot.url}\n                target=\"_blank\"\n                title={`${screenshot.title || screenshot.alt} - click to expand`}\n                rel=\"noopener noreferrer\"\n              >\n                <img src={screenshot.url} alt={screenshot.alt} />\n              </a>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Breadcrumbtrail } from '../../components/Breadcrumbtrail'\nimport { Screenshots } from '../../components/Screenshots'\n\nconst wfScreenshots = [\n  {\n    url: '/images/projects/worldfootball/homepage.png',\n    alt: 'Homepage',\n    title: 'Worldfootball.com homepage',\n  },\n  {\n    url: '/images/projects/worldfootball/teampage.png',\n    alt: 'Team page',\n    title: 'Worldfootball.com team page',\n  },\n  {\n    url: '/images/projects/worldfootball/matchpage.png',\n    alt: 'Match page',\n    title: 'Match page (2018 World Cup Final)',\n  },\n  {\n    url: '/images/projects/worldfootball/leaguetable.png',\n    alt: 'League table',\n    title: 'Worldfootball.com League table',\n  },\n]\n\nconst ProjectWorldfootballPage = () => {\n  return (\n    <section>\n      <Breadcrumbtrail trail={[{ to: '/projects/', label: 'Projects' }, { label: 'Worldfootball' }]} />\n\n      <h1>Worldfootball</h1>\n\n      <p>\n        Worldfootball.com was a collaborative project between <a href=\"https://datasportsgroup.com/\" target=\"_blank\" rel=\"noopener noreferrer\">DataSportsGroup</a> (DSG)\n        and Arjen Robijn, the founder of start.me (see <a href=\"/#jobs\">jobs</a>) for whom I work for.\n      </p>\n\n      <p>DSG covers over 400 football competitions worldwide, and for many top leagues they have detailed player profile and career statistics available.</p>\n\n      <p>All the football data covered by DSG was available on worldfootball. Besides the website itself, worldfootball also powered a widgets/white-label platform.\n        We offered embeddable fixture and league table widgets, which were used by hundreds of websites.\n      </p>\n\n      <p>\n        I personally took care of the development of the entire platform: design of the database, development of the front-end, back-end and data\n        synchronization processes, and the infrastructure at Heroku and later AWS. <br/>\n        The UX/UI design was created by Arjen Robijn & <a href=\"http://pauldejong.info/\" target=\"_blank\" rel=\"noopener noreferrer\">Paul de Jong</a>.\n      </p>\n\n      <p>Unfortunately, worldfootball had to be taken offline because start.me required all our time & focus.</p>\n\n      <h3>Screenshots</h3>\n      <Screenshots screenshots={wfScreenshots}/>\n\n      <h3>Technology</h3>\n        <p>\n          Live results and post-match stats were synced from the DataSportsGroup API\n          by <a href=\"https://github.com/resque/resque\" target=\"_blank\" rel=\"noopener noreferrer\">Resque</a>-backed background jobs that were written\n          in <a href=\"https://www.ruby-lang.org/en/\" target=\"_blank\" rel=\"noopener noreferrer\">Ruby</a>.\n        </p>\n        <p>\n          Worldfootball relied heavily on Cloudflare for edge-caching. We devised a mechanism to actively purge specific resources using Cloudflare's <a href=\"https://api.cloudflare.com/\" target=\"_blank\" rel=\"noopener noreferrer\">API</a> when, for example, match results were updated.\n        </p>\n        <p>\n          We used an <a href=\"https://www.elastic.co/\" target=\"_blank\" rel=\"noopener noreferrer\">ElasticSearch</a> database for the search feature, which allowed visitors to look up competitions, teams, players and venues.\n        </p>\n\n        <h4>Technology</h4>\n        <ul>\n          <li>Front-end:\n            <ul>\n              <li>React (incl. Redux, Jest)</li>\n              <li>Sass (SCSS)</li>\n              <li>Babel, ESLint</li>\n              <li>Served by Express.js with server-side rendering</li>\n            </ul>\n          </li>\n          <li>Back-end:\n            <ul>\n              <li>API: Ruby on Rails</li>\n              <li>Background jobs: Ruby, Redis, Resque</li>\n              <li>Data management: ActiveAdmin</li>\n            </ul>\n          </li>\n          <li>Infrastructure:\n            <ul>\n              <li>AWS: EC2, S3, ElasticSearch</li>\n              <li>Docker, docker-compose, docker-machine</li>\n            </ul>\n          </li>\n        </ul>\n    </section>\n  );\n}\n\nexport default ProjectWorldfootballPage;\n","import React from 'react';\n\nimport { Breadcrumbtrail } from '../../components/Breadcrumbtrail'\n\nimport './ProjectTrialmonitorPage.scss';\n\nconst ProjectTrialmonitorPage = () => {\n  return (\n    <section className=\"trialmonitor-page\">\n      <Breadcrumbtrail trail={[{ to: '/projects/', label: 'Projects' }, { label: 'ClinicalTrials monitor' }]} />\n\n      <h1>ClinicalTrials.gov monitor</h1>\n\n      <p className=\"intro\">A personal project to receive alerts when clinical trials are updated on clinicaltrials.gov.</p>\n        <p>\n          The <a href=\"https://clinicaltrials.gov/\" target=\"_blank\" rel=\"noopener noreferrer\">clinicaltrials.gov</a> is a website\n          provided by the U.S. National Library of Medicine. It is a database of privately and publicly funded clinical studies\n          conducted around the world.\n        </p>\n\n        <p>\n          I monitor several dozen trials on a weekly basis, but find the clinicaltrials.gov website not very user-friendly. Keeping track\n          of many trials, and determining what exactly has changed when one is updated, takes quite a bit of effort.<br/>\n          You can only view the changes for a single trial at a time, and it takes several clicks, much scrolling, and popup window before\n          you get there. So I therefore wanted to automate this process.\n        </p>\n\n        <p>\n          Luckily, they provide an <a href=\"https://clinicaltrials.gov/ct2/resources/download\" target=\"_blank\" rel=\"noopener noreferrer\">API</a>,\n          so I've built a \"clinicaltrials monitor\" to receive automatic updates of the trials that I'm interested in.\n          It's built using an AWS Step Functions workflow/StateMachine, which is executed several times per day, see the description below.\n        </p>\n\n        <p>This project is still work in progress, but the basic functionality is implemented:</p>\n        <ul>\n          <li>A DynamoDB table holds a list of clinical trials to monitor</li>\n          <li>A Step Functions workflow is periodically executed to check for updated trials</li>\n          <li>\n            For each updated trial, a Lambda function is triggered, to:\n            <ol>\n              <li>Fetch the full trial record and update the record in DynamoDB</li>\n              <li>Determine the diff between the previous and latest version of the trial</li>\n            </ol>\n          </li>\n          <li>\n            Once all trial records have been updated, another Lambda function is triggered, to:\n            <ol>\n              <li>Format a summary of all detected changes</li>\n              <li>Send the summary as an email</li>\n            </ol>\n          </li>\n        </ul>\n\n        <p>\n          <a href=\"/images/projects/trialmonitor/trial_monitor_step_functions.png\" target=\"_blank\">\n            <img\n              className=\"trialmonitor-page__stepfunctions\"\n              src=\"/images/projects/trialmonitor/trial_monitor_step_functions.png\"\n              alt=\"AWS Step Functions\"\n              title=\"AWS Step Functions\"\n            />\n          </a>\n        </p>\n\n        <p>\n          In the future I intend to make this a publicly-available service.\n        </p>\n\n        <h3>Technology</h3>\n        <ul>\n          <li><a href=\"https://aws.amazon.com/step-functions/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Step Functions</a> & <a href=\"https://aws.amazon.com/lambda/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Lambda</a>, written in <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js</a></li>\n          <li><a href=\"https://serverless.com\" target=\"_blank\" rel=\"noopener noreferrer\">Serverless Framework</a> in combination with <a href=\"https://aws.amazon.com/cloudformation/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS CloudFormation</a></li>\n          <li><a href=\"https://aws.amazon.com/dynamodb/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS DynamoDB</a></li>\n        </ul>\n    </section>\n  );\n}\n\nexport default ProjectTrialmonitorPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch,  Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport HeaderBar from '../components/HeaderBar';\nimport Submenu from '../components/Submenu';\nimport FooterBar from '../components/FooterBar';\n\nimport ProjectsIndexPage from './projects/ProjectsIndexPage';\nimport ProjectWorldfootballPage from './projects/ProjectWorldfootballPage';\nimport ClinicaltrialsmonitorPage from './projects/ProjectTrialmonitorPage';\n\n\nimport '../styles/variables.scss';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Router>\n      <main className=\"app-main\">\n        <HeaderBar/>\n\n        <div className=\"app-main__submenu\">\n          <Submenu />\n        </div>\n        <Switch>\n          <Route>\n\n            <div className=\"app-main__page-container\">\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/projects/worldfootball/\" component={ProjectWorldfootballPage} />\n              <Route exact path=\"/projects/trialmonitor/\" component={ClinicaltrialsmonitorPage} />\n              <Route exact path=\"/projects/\" component={ProjectsIndexPage} />\n            </div>\n          </Route>\n        </Switch>\n\n        <FooterBar/>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}