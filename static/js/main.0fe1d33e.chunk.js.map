{"version":3,"sources":["components/IntroArticle.tsx","containers/Home.tsx","components/Submenu.tsx","components/HeaderBar.tsx","components/FooterBar.tsx","components/Loader.tsx","containers/App.tsx","serviceWorker.js","index.tsx"],"names":["IntroArticle","image","src","this","props","imageUrl","alt","imageAlt","imageLinkUrl","href","target","imageLinkTarget","rel","imageLinkTo","to","className","title","subTitle","articleText","Component","Home","jobs","company","tenure","logo_url","website_url","text","id","discipline","skills","map","index","key","skill","si","job","Submenu","HeaderBar","FooterBar","Loader","ProjectsIndexPage","React","lazy","ProjectWorldfootballPage","ClinicaltrialsmonitorPage","App","fallback","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mOAgBqBA,G,uLAEjB,IAAIC,EAAQ,yBAAKC,IAAKC,KAAKC,MAAMC,SAAUC,IAAKH,KAAKC,MAAMG,WAY3D,OAVIJ,KAAKC,MAAMI,aACbP,EAAQ,uBAAGQ,KAAMN,KAAKC,MAAMI,aAAcE,OAAQP,KAAKC,MAAMO,iBAAmB,QAASC,IAAI,uBAC1FX,GAEME,KAAKC,MAAMS,cACpBZ,EAAQ,kBAAC,IAAD,CAAMa,GAAIX,KAAKC,MAAMS,aAC1BZ,IAKH,6BAASc,UAAU,iBACjB,wBAAIA,UAAU,wBACXZ,KAAKC,MAAMY,MACVb,KAAKC,MAAMa,SAAW,0BAAMF,UAAU,2BAA2BZ,KAAKC,MAAMa,UAAmB,IAGnG,6BAASF,UAAU,4BACjB,yBAAKA,UAAU,wBACZd,GAEH,yBAAKc,UAAU,uBACZZ,KAAKC,MAAMc,mB,GA1BkBC,e,6RC+G3BC,G,MAxHF,WACX,IAuBMC,EAAO,CACX,CACEC,QAAS,WACTC,OAAQ,qBACRC,SAAU,2BACVC,YAAa,mBACbC,KAAM,iCACJ,wHACA,iKAGJ,CACEJ,QAAS,sCACTC,OAAQ,sBACRC,SAAU,2BACVC,YAAa,+BACbC,KAAM,iCACJ,kLACA,yMAGJ,CACEJ,QAAS,uBACTC,OAAQ,sBACRC,SAAU,0BACVC,YAAa,yBACbC,KAAM,iCACJ,sHACA,sQAQN,OACE,6BAASX,UAAU,aACjB,6BAASY,GAAG,MAAMZ,UAAU,OAC1B,wCACA,0JACA,qIAEM,uBAAGN,KAAK,mBAAmBC,OAAO,SAASE,IAAI,uBAA/C,YAFN,oDAKA,8IACA,8CAAmB,uBAAGH,KAAK,gBAAR,SAAnB,MAAsD,uBAAGA,KAAK,mBAAR,aAGxD,6BAASkB,GAAG,SAASZ,UAAU,UAC7B,sCACA,wBAAIA,UAAU,sBA3EL,CACb,CACEa,WAAY,WACZC,OAAQ,CAAC,OAAO,UAAU,MAAM,WAAW,WAE7C,CACED,WAAY,YACZC,OAAQ,CAAC,aAAc,QAAQ,gBAAiB,QAAQ,WAE1D,CACED,WAAY,iBACZC,OAAQ,CAAC,SAAU,cAAe,aAAc,WAElD,CACED,WAAY,YACZC,OAAQ,CAAC,SAAS,UAAU,QAAS,YAEvC,CACED,WAAY,OACZC,OAAQ,CAAE,QAAS,SAAU,MAAM,MAAM,QAAQ,eA0DpCC,KAAI,SAACF,EAAYG,GACtB,OAAO,wBAAIC,IAAG,aAAQD,GAAShB,UAAU,eACvC,0BAAMA,UAAU,2BAA2Ba,EAAWA,WAAtD,KACA,wBAAIb,UAAU,2BAEVa,EAAWC,OAAOC,KAAI,SAACG,EAAOC,GAAR,OACpB,wBAAIF,IAAG,UAAKD,EAAL,YAAcG,GAAMnB,UAAU,sBAAsBkB,aAU3E,6BAASN,GAAG,OAAOZ,UAAU,QAC3B,oCAEEM,EAAKS,KAAI,SAACK,EAAKJ,GACb,OAAO,kBAAC/B,EAAA,EAAD,CACLgC,IAAG,cAASD,GACZf,MAAOmB,EAAIb,QACXL,SAAQ,aAAQkB,EAAIZ,QACpBL,YAAaiB,EAAIT,KACjBrB,SAAU8B,EAAIX,SACdhB,aAAc2B,EAAIV,YAClBd,gBAAgB,SAChBJ,SAAU4B,EAAIb,cAMtB,6BAASP,UAAU,YACjB,wCADF,kEAEiE,kBAAC,IAAD,CAAMD,GAAG,cAAT,iBAFjE,QCvGSsB,G,MAXC,WACd,OACE,yBAAKrB,UAAU,WACb,4BACE,4BAAI,kBAAC,IAAD,CAAMD,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBCgBGuB,G,MAnBG,WAChB,OACE,4BAAQtB,UAAU,aAChB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMD,GAAG,KACL,yBAAKC,UAAU,oBAAoBT,IAAI,SAASJ,IAAI,oBAEtD,kBAAC,IAAD,CAAMY,GAAG,KACP,4CAIN,yBAAKC,UAAU,sBACb,kBAAC,EAAD,UCAOuB,G,MAhBG,WAChB,OACE,4BAAQvB,UAAU,aAChB,uBAAGN,KAAK,gCAAgCM,UAAU,kBAAkBL,OAAO,SAASE,IAAI,uBACtF,yBAAKV,IAAI,yDAAyDI,IAAI,YAExE,uBAAGG,KAAK,yCAAyCM,UAAU,kBAAkBL,OAAO,SAASE,IAAI,uBAC/F,yBAAKV,IAAI,2DAA2DI,IAAI,cAE1E,uBAAGG,KAAK,6BAA6BM,UAAU,kBAAkBL,OAAO,SAASE,IAAI,uBACnF,yBAAKV,IAAI,mBAAmBI,IAAI,WARpC,IASS,SATT,iCCFWiC,EAFA,kBAAM,yBAAKxB,UAAU,UAAf,eCUfyB,G,YAAoBC,IAAMC,MAAK,kBAAM,iCACrCC,EAA2BF,IAAMC,MAAK,kBAAM,gCAC5CE,EAA4BH,IAAMC,MAAK,kBAAM,gCA+BpCG,MA7Bf,WACE,OACE,kBAAC,IAAD,KACE,0BAAM9B,UAAU,YACd,kBAAC,EAAD,MAEA,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,4BACb,kBAAC,WAAD,CAAU+B,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7B,IACjC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,2BAA2BC,UAAWN,IACxD,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,2BAA2BC,UAAWL,IACxD,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,0BAA0BC,UAAWL,IACvD,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,aAAaC,UAAWT,QAMlD,kBAAC,EAAD,SC3BYU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0fe1d33e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './IntroArticle.scss';\n\nexport interface IntroArticleProps {\n  title: string;\n  subTitle?: string;\n  articleText: JSX.Element;\n  imageUrl: string;\n  imageLinkTo?: string;\n  imageLinkUrl?: string;\n  imageLinkTarget?: string;\n  imageAlt?: string;\n };\n\nexport default class IntroArticle extends Component<IntroArticleProps> {\n  render() {\n    let image = <img src={this.props.imageUrl} alt={this.props.imageAlt} />;\n\n    if (this.props.imageLinkUrl) {\n      image = <a href={this.props.imageLinkUrl} target={this.props.imageLinkTarget || '_self'} rel=\"noopener noreferrer\">\n        {image}\n      </a>;\n    } else if (this.props.imageLinkTo) {\n      image = <Link to={this.props.imageLinkTo}>\n        {image}\n      </Link>;\n    }\n\n    return (\n      <article className=\"intro-article\">\n        <h3 className=\"intro-article__title\">\n          {this.props.title}\n          { this.props.subTitle ? <span className=\"intro-article__subtitle\">{this.props.subTitle}</span> : ''}\n        </h3>\n\n        <section className=\"intro-article__container\">\n          <div className=\"intro-article__image\">\n            {image}\n          </div>\n          <div className=\"intro-article__text\">\n            {this.props.articleText}\n          </div>\n        </section>\n      </article>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport IntroArticle from '../components/IntroArticle';\n\nimport './Home.scss';\n\nconst Home = () => {\n  const skills = [\n    {\n      discipline: 'Back-end',\n      skills: ['Ruby','Node.js','PHP','RabbitMQ','Resque']\n    },\n    {\n      discipline: 'Databases',\n      skills: ['PostgreSQL', 'Redis','Elasticsearch', 'MySQL','Oracle']\n    },\n    {\n      discipline: 'Infrastructure',\n      skills: ['Heroku', 'Cloud (AWS)', 'Serverless', 'Docker']\n    },\n    {\n      discipline: 'Front-end',\n      skills: ['Vue.js','Nuxt.js','React', 'Riot.js'],\n    },\n    {\n      discipline: 'Misc',\n      skills: [ 'Nginx', 'Apache', 'Git','UML','CI/CD','ArchiMate']\n    }\n  ];\n\n  const jobs = [\n    {\n      company: 'start.me',\n      tenure: 'dec 2015 - current',\n      logo_url: '/images/logo-startme.png',\n      website_url: 'https://start.me',\n      text: <section>\n        <p>start.me is an online start page/bookmark manager for both individuals and organisations.</p>\n        <p>As a Senior Web Developer, and later Tech Lead, I've worked on numerous front-end, back-end and infrastructure-related projects.</p>\n      </section>\n    },\n    {\n      company: 'Global Sports Media / Perform Group',\n      tenure: 'jan 2010 - nov 2015',\n      logo_url: '/images/logo-perform.svg',\n      website_url: 'https://www.statsperform.com',\n      text: <section>\n        <p>Global Sports Media (GSM) collects and syndicates sports statistics via a REST API, FTP push service and hosted (white-label) websites and widgets.</p>\n        <p>After being fully acquired by Perform Group, I've worked as a Software Architect on, amongst other things, a project to introduce a new sports data collection platform.</p>\n      </section>\n    },\n    {\n      company: 'Sport-Track / MyLaps',\n      tenure: 'may 2007 - dec 2009',\n      logo_url: '/images/logo-mylaps.svg',\n      website_url: 'https://www.mylaps.com',\n      text: <section>\n        <p>Sport-Track developed a GPS-based live tracking and tracing system for sporting events.</p>\n        <p>\n          As a web developer I worked on a back-end portal written in PHP, which was backed by an Oracle database.\n          Using this portal, organisers could manage their sporting events. It also served as a registration portal for participants.\n        </p>\n      </section>\n    }\n  ]\n\n  return (\n    <article className=\"home-page\">\n      <section id=\"bio\" className=\"bio\">\n        <h2>About me</h2>\n        <p>I'm an experienced full-stack web developer, more inclined towards back-end development, from The Hague in The Netherlands.</p>\n        <p>\n          I've worked in the sports data industry for over 8 years. The last 4 years I worked as a Tech Lead\n          for <a href=\"https://start.me\" target=\"_blank\" rel=\"noopener noreferrer\">start.me</a>, an online start page/bookmark manager service.\n        </p>\n\n        <p>My main interests & experience are: Ruby, Node, PHP, PostgreSQL, JS (vanilla, Vue & React), cloud & serverless.</p>\n        <p>Download my CV: <a href=\"/docs/cv.pdf\">Dutch</a> | <a href=\"/docs/cv_en.pdf\">English</a></p>\n      </section>\n\n      <section id=\"skills\" className=\"skills\">\n        <h2>Skills</h2>\n        <ul className=\"skills__skillslist\">\n          {\n            skills.map((discipline, index) => {\n              return <li key={`sk_${index}`} className=\"skillsgroup\">\n                <span className=\"skillsgroup__discipline\">{discipline.discipline}:</span>\n                <ul className=\"skillsgroup__skillslist\">\n                  {\n                    discipline.skills.map((skill, si) =>\n                      <li key={`${index}_${si}`} className=\"skillsgroup__skill\">{skill}</li>\n                    )\n                  }\n                </ul>\n              </li>\n            })\n          }\n        </ul>\n      </section>\n\n      <section id=\"jobs\" className=\"jobs\">\n        <h2>Jobs</h2>\n        {\n          jobs.map((job, index) => {\n            return <IntroArticle\n              key={`job_${index}`}\n              title={job.company}\n              subTitle={` - ${job.tenure}`}\n              articleText={job.text}\n              imageUrl={job.logo_url}\n              imageLinkUrl={job.website_url}\n              imageLinkTarget=\"_blank\"\n              imageAlt={job.company}\n            />\n          })\n        }\n      </section>\n\n      <section className=\"projects\">\n        <h2 >Projects</h2>\n        For an impression of personal projects I've worked on, see the <Link to=\"/projects/\">Projects page</Link>.\n      </section>\n    </article>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Submenu.scss';\n\nconst Submenu = () => {\n  return (\n    <div className=\"submenu\">\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/projects/\">Projects</Link></li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Submenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Submenu from './Submenu';\n\nimport './HeaderBar.scss';\n\nconst HeaderBar = () => {\n  return (\n    <header className=\"HeaderBar\">\n      <div className=\"HeaderBar__name\">\n        <Link to=\"/\">\n            <img className=\"HeaderBar__avatar\" alt=\"avatar\" src=\"/avatar192.jpg\" />\n          </Link>\n          <Link to=\"/\">\n            <h1>Paul Kamer</h1>\n          </Link>\n      </div>\n\n      <div className=\"HeaderBar__submenu\">\n        <Submenu />\n      </div>\n    </header>\n  );\n}\n\nexport default HeaderBar;\n","import React from 'react';\n\nimport './FooterBar.scss';\n\nconst FooterBar = () => {\n  return (\n    <footer className=\"footerbar\">\n      <a href=\"https://github.com/paulkamer/\" className=\"footerbar__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"https://unpkg.com/simple-icons@latest/icons/github.svg\" alt=\"Github\" />\n      </a>\n      <a href=\"https://www.linkedin.com/in/paulkamer/\" className=\"footerbar__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"https://unpkg.com/simple-icons@latest/icons/linkedin.svg\" alt=\"LinkedIn\" />\n      </a>\n      <a href=\"mailto:paulkamer@gmail.com\" className=\"footerbar__icon\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"/images/mail.svg\" alt=\"email\" />\n      </a> { '\\u2013' } last updated February 2020\n    </footer>\n  );\n}\n\nexport default FooterBar;\n","import React from 'react';\n\nconst Loader = () => <div className=\"loader\">Loading...</div>;\n\nexport default Loader;\n","import React, { Suspense }  from 'react';\nimport { BrowserRouter as Router, Switch,  Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport HeaderBar from '../components/HeaderBar';\nimport Submenu from '../components/Submenu';\nimport FooterBar from '../components/FooterBar';\nimport Loader from '../components/Loader';\n\nimport '../styles/variables.scss';\nimport './App.scss';\n\nconst ProjectsIndexPage = React.lazy(() => import('./projects/ProjectsIndexPage'));\nconst ProjectWorldfootballPage = React.lazy(() => import('./projects/ProjectWorldfootballPage'));\nconst ClinicaltrialsmonitorPage = React.lazy(() => import('./projects/ProjectTrialmonitorPage'));\n\nfunction App() {\n  return (\n    <Router>\n      <main className=\"app-main\">\n        <HeaderBar/>\n\n        <div className=\"app-main__submenu\">\n          <Submenu />\n        </div>\n        <Switch>\n          <Route>\n            <div className=\"app-main__page-container\">\n              <Suspense fallback={<Loader />}>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/projects/worldfootball/\" component={ProjectWorldfootballPage} />\n                <Route exact path=\"/projects/trialsmonitor/\" component={ClinicaltrialsmonitorPage} />\n                <Route exact path=\"/projects/trialmonitor/\" component={ClinicaltrialsmonitorPage} />\n                <Route exact path=\"/projects/\" component={ProjectsIndexPage} />\n              </Suspense>\n            </div>\n          </Route>\n        </Switch>\n\n        <FooterBar/>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}