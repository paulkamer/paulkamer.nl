(this["webpackJsonppaulkamer.nl"]=this["webpackJsonppaulkamer.nl"]||[]).push([[4],{32:function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,"a",(function(){return r}))},33:function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.d(t,"a",(function(){return a}))},34:function(e,t,n){"use strict";function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n.d(t,"a",(function(){return r}))},35:function(e,t,n){"use strict";function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e){return(a="function"===typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return r(e)}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":r(e)})(e)}function o(e,t){return!t||"object"!==a(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}n.d(t,"a",(function(){return o}))},36:function(e,t,n){"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}n.d(t,"a",(function(){return a}))},37:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(32),a=n(33),o=n(35),l=n(34),i=n(36),c=n(0),u=n.n(c),s=n(2),m=(n(38),function(e){function t(){return Object(r.a)(this,t),Object(o.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(i.a)(t,e),Object(a.a)(t,[{key:"render",value:function(){return u.a.createElement("nav",{className:"breadcrumbtrail"},u.a.createElement("ul",null,u.a.createElement("li",null,u.a.createElement(s.b,{to:"/"},"Home")),this.props.trail.map((function(e,t){return u.a.createElement("li",{key:"breadcrumb_".concat(t)},e.to?u.a.createElement(s.b,{to:e.to},e.label):e.label)}))))}}]),t}(c.Component))},38:function(e,t,n){},41:function(e,t,n){},43:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(37);n(41);t.default=function(){return a.a.createElement("section",{className:"trialmonitor-page"},a.a.createElement(o.a,{trail:[{to:"/projects/",label:"Projects"},{label:"ClinicalTrials monitor"}]}),a.a.createElement("h1",null,"ClinicalTrials.gov monitor"),a.a.createElement("p",{className:"intro"},"A personal project to receive alerts when clinical trials are updated on clinicaltrials.gov."),a.a.createElement("p",null,"The ",a.a.createElement("a",{href:"https://clinicaltrials.gov/",target:"_blank",rel:"noopener noreferrer"},"clinicaltrials.gov")," is a website provided by the U.S. National Library of Medicine. It is a database of privately and publicly funded clinical studies conducted around the world."),a.a.createElement("p",null,"I monitor several dozen trials on a weekly basis, but find the clinicaltrials.gov website not very user-friendly. Keeping track of many trials, and determining what exactly has changed when one is updated, takes quite a bit of effort.",a.a.createElement("br",null),"You can only view the changes for a single trial at a time, and it takes several clicks, much scrolling, and popup window before you get there. So I therefore wanted to automate this process."),a.a.createElement("p",null,"Luckily, they provide an ",a.a.createElement("a",{href:"https://clinicaltrials.gov/ct2/resources/download",target:"_blank",rel:"noopener noreferrer"},"API"),", so I've built a \"clinicaltrials monitor\" to receive automatic updates of the trials that I'm interested in. It's built using an AWS Step Functions workflow/StateMachine, which is executed several times per day, see the description below."),a.a.createElement("p",null,"This project is still work in progress, but the basic functionality is implemented:"),a.a.createElement("ul",null,a.a.createElement("li",null,"A DynamoDB table holds a list of clinical trials to monitor"),a.a.createElement("li",null,"A Step Functions workflow is periodically executed to check for updated trials"),a.a.createElement("li",null,"For each updated trial, a Lambda function is triggered, to:",a.a.createElement("ol",null,a.a.createElement("li",null,"Fetch the full trial record and update the record in DynamoDB"),a.a.createElement("li",null,"Determine the diff between the previous and latest version of the trial"))),a.a.createElement("li",null,"Once all trial records have been updated, another Lambda function is triggered, to:",a.a.createElement("ol",null,a.a.createElement("li",null,"Format a summary of all detected changes"),a.a.createElement("li",null,"Send the summary as an email")))),a.a.createElement("p",null,a.a.createElement("img",{className:"trialmonitor-page__stepfunctions",src:"/images/projects/trialmonitor/trial_monitor_step_functions.png",alt:"AWS Step Functions",title:"AWS Step Functions"})),a.a.createElement("p",null,"In the future I intend to make this a publicly-available service."),a.a.createElement("h3",null,"Technology"),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("a",{href:"https://aws.amazon.com/step-functions/",target:"_blank",rel:"noopener noreferrer"},"AWS Step Functions")," & ",a.a.createElement("a",{href:"https://aws.amazon.com/lambda/",target:"_blank",rel:"noopener noreferrer"},"AWS Lambda"),", written in ",a.a.createElement("a",{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"},"Node.js")),a.a.createElement("li",null,a.a.createElement("a",{href:"https://serverless.com",target:"_blank",rel:"noopener noreferrer"},"Serverless Framework")," in combination with ",a.a.createElement("a",{href:"https://aws.amazon.com/cloudformation/",target:"_blank",rel:"noopener noreferrer"},"AWS CloudFormation")),a.a.createElement("li",null,a.a.createElement("a",{href:"https://aws.amazon.com/dynamodb/",target:"_blank",rel:"noopener noreferrer"},"AWS DynamoDB"))))}}}]);
//# sourceMappingURL=4.211e30e7.chunk.js.map